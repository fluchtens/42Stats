version: "3"

services:
  database:
    container_name: 42stats-db
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - 42stats_database:/var/lib/mysql
    networks:
      - 42stats_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  adminer:
    container_name: 42stats-adminer
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - 42stats_network
    restart: always

  redis:
    container_name: 42stats-redis
    image: redis:7.4.1
    ports:
      - 6379:6379
    volumes:
      - 42stats_redis:/data
    networks:
      - 42stats_network
    restart: always

  backend:
    container_name: 42stats-backend
    image: 42stats-backend
    build:
      context: ../../backend
      dockerfile: dev.Dockerfile
    environment:
      VITE_API_URL: ${VITE_API_URL}
      CLIENT_URL: ${CLIENT_URL}
      DATABASE_URL: ${DATABASE_URL}
      FORTY_TWO_UID: ${FORTY_TWO_UID}
      FORTY_TWO_SECRET: ${FORTY_TWO_SECRET}
    depends_on:
      - database
      - redis
    ports:
      - 3000:3000
    volumes:
      - ../../backend:/app
      - /app/node_modules
    networks:
      - 42stats_network
    restart: always

  frontend:
    container_name: 42stats-frontend
    image: 42stats-frontend
    build:
      context: ../../frontend
      dockerfile: dev.Dockerfile
    environment:
      VITE_API_URL: ${VITE_API_URL}
    depends_on:
      - backend
    ports:
      - 5173:5173
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    networks:
      - 42stats_network
    restart: always

networks:
  42stats_network:
    name: 42stats_network

volumes:
  42stats_database:
    name: 42stats_database
  42stats_redis:
    name: 42stats_redis
